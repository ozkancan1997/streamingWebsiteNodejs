<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Your Videos</title>
    <link rel="stylesheet" href="/uservideos.css" type="text/css">
</head>
<body>
    <h1>Your Videos</h1>
    <a id="returnlink" href="/videos">Return</a>
    <div class="videocontainer">
        <ul id="videos">
        </ul>
    </div>
    <div class="iocontainer">
        
        <button onclick="switchCreate()">Create Video</button>
        <button onclick="switchUpdate()" id="updatevideobutton" type="button">Update Video</button>
        <button onclick="delFetch()" id="deleteButton" type="button">Delete Video</button>
        <h3 id="mode"></h3>

        <form id="registerform" action="/user/manage/register" method="post">
            <label for="name"> Name: </label>
            <input maxlength="50" type="text" id="name" name="name" required><br> <br>
            <label for="desc">Description: </label>
            <textarea maxlength="500" id="desc" name="desc" rows="4" cols="50" form="registerform" required></textarea>
            <input type="hidden" id="uploader" name="uploader" readonly>
            <button id="registerButton" type="submit">Register</button>
            <button id="updateButton">Update</button>
        </form>
            
        
        <form id="uploadform" name="uploadform" action="/user/manage/upload" enctype="multipart/form-data" method="post">
            <label name="uploadedLabel" id="uploadedLabel" for="uploaded">File: </label>
            <input accept=".mp4" id="uploaded" name="uploaded" type="file" required disabled>
            <button id="uploadButton" name="uploadButton" type="submit" disabled>Upload</button>
        </form>
    </div>
</body>
<script>
    const videolist = document.getElementById('videos');
    const registerform = document.getElementById('registerform');
    const uploadform = document.getElementById('uploadform');
    const modeHeader = document.getElementById('mode');
    const updateVideoButton = document.getElementById('updatevideobutton')
    const updateButton = document.getElementById('updateButton'); updateButton.disabled=true;
    const registerButton = document.getElementById('registerButton'); registerButton.disabled=true;
    const uploaded = document.getElementById('uploaded');
    const uploadButton = document.getElementById('uploadButton')
    const name = document.getElementById('name');
    const desc = document.getElementById('desc');
    let radio;

    document.getElementById('uploader').value=document.location.href.split('/')[4].replace('?', '');

    const listvideos = async () =>{
            videolist.replaceChildren([]);
            const res = await fetch(window.location.href, { method: 'post', headers : {'Content-Type' : 'application/json'}});

            const videos=  await res.json()
            const uploader_name = videos.uploader;

            videos.userVideos.forEach(element => {
                const li = document.createElement('li');
                const link = document.createElement('a');
                const radio = document.createElement('input');
                radio.type='radio';
                radio.className="radiobutton";
                radio.name="radiobutton"
                radio.dataset.id=element._id;
                radio.dataset.name=element.name;
                radio.dataset.desc=element.desc;
                link.innerText = `${element.name} Uploader: ${uploader_name} views: ${element.views}`;
                link.href = '/videos/' + element._id;
                li.appendChild(radio);
                li.appendChild(link);
                li.addEventListener('click', (e)=>{
                    e.preventDefault();
                    li.childNodes[0].checked=true;
                })
                videolist.appendChild(li)
            });

        }
        listvideos()
        
        registerform.addEventListener('submit', (e)=>{

            uploaded.disabled=false;
            uploadButton.disabled=false;

        })



        const switchUpdate = ()=>{
            console.log("switchupdate")
            let selected
            radio = document.getElementsByName('radiobutton');
            for(let i of radio){if(i.checked) {selected = i}};
            modeHeader.innerText=`Update: ID: ${selected.dataset.id} - Name: ${selected.dataset.name}`
            updateButton.disabled=false;
            registerButton.disabled=true;
            uploaded.disabled=true;
            uploadButton.disabled=true;
            name.value=selected.dataset.name;
            desc.value=selected.dataset.desc;
        }

        
        const delFetch = async ()=>{
            updateButton.disabled=true;
            uploadButton.disabled=true;
            registerButton.disabled=true;
            name.value="";
            desc.value="";
            let selected;
            radio = document.getElementsByName('radiobutton');
            for(let i of radio){if(i.checked) {selected = i}};
            await fetch('/user/manage/delete/'+selected.dataset.id,{ method: 'delete'})
            listvideos();
        }
        
        updateButton.addEventListener('click', async (e)=>{
            e.preventDefault();
            let selected;
            radio = document.getElementsByName('radiobutton');
            for(let i of radio){if(i.checked) {selected = i}};
            await upFetch(selected.dataset.id)
        })

        const upFetch = async (id)=>{
            const uploader = document.getElementById('uploader');
            if(!name.checkValidity()) return name.reportValidity();
            if(!desc.checkValidity()) return desc.reportValidity();
            try {
                await fetch('/user/manage/update/'+id,
                {method : 'PATCH', headers : {'Content-Type' : 'application/json'},
                body : JSON.stringify({'name' : name.value, 'desc' : desc.value, 'uploader':uploader.value})})
                listvideos()
            } catch (error) {
                console.log(error)
            }
            
            
        }

        const switchCreate = ()=>{
            name.value="";
            desc.value="";
            registerButton.disabled=false;
            modeHeader.innerText="Create Video"
            updateButton.disabled=true;
            registerButton.disabled=false;
        }

</script>
</html>